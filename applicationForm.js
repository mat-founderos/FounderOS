let currentStep=0,currentFormData={};$(document).ready((function(){function t(){c.css("width",(currentStep+1)/l*100+"%")}function e(){i.hide().eq(currentStep).show(),$(".multistep-form-previous-modal").toggle(currentStep>0),$(".multistep-form-next-modal").toggle(currentStep<l-1)}function o(){$(".multistep-form-modal input, .multistep-form-modal select, .multistep-form-modal textarea").each((function(){const t=$(this).attr("name")||$(this).attr("id");t&&($(this).is(":checkbox")?currentFormData[t]=$(this).prop("checked"):$(this).is(":radio")?$(this).prop("checked")&&(currentFormData[t]=$(this).val()):currentFormData[t]=$(this).val().trim())}))}const n="https://founderos.app.n8n.cloud/webhook/webhook/partial-lead";async function r(){o();try{if(!(await fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:"partial",formData:currentFormData,step:currentStep,timestamp:(new Date).toISOString()})})).ok)throw new Error("Failed to send partial data")}catch(t){console.error("Partial data send failed:",t)}}async function a(o){let n=i.eq(currentStep);if(1!==o||function(t){let e=t.find(".multiform-textfield"),o=t.find("input[type='radio']"),n=t.find("input[type='checkbox']"),r=t.find("#Email"),a=t.find("#Phone-Number"),i=t.find(".multistep-form-error"),c=!0;var l;return r.length&&(l=r.val().trim(),/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(l)||(i.text("Please enter a valid email address.").show(),c=!1)),a.length&&/[a-zA-Z]/.test(a.val().trim())&&(i.text("Phone number should not contain letters.").show(),c=!1),e.length&&n.length?e.val().trim()||n.is(":checked")||(i.text("Please fill out this field or check the box.").show(),c=!1):(e.length&&!e.val().trim()&&(i.text("Please fill out this field.").show(),c=!1),n.length&&!n.is(":checked")&&(i.text("Please select at least one to proceed.").show(),c=!1)),o.length&&!o.is(":checked")&&(i.text("Please select an option.").show(),c=!1),c&&i.hide(),c}(n)){if(currentStep+=o,window.fathom){const t=`Application Form Submit (Step: ${currentStep+1})`;fathom.trackEvent(t)}e(),t(),await r()}}const i=$(".multistep-form-step-modal "),c=$(".multistep-form-progressbar-progress-modal"),l=i.length;$(".msf-button, .multistep-form-next-modal ").click((()=>a(1))),$(".multistep-form-previous-modal ").click((()=>a(-1))),$(".multistep-choice").change((function(){$("#first-question-no").is(":checked")?window.location.href="/training":a(1)})),$("#first-question-no").on("click",(function(){window.location.href="/training"})),e(),t(),$(".multistep-form-modal").submit((function(t){t.preventDefault(),o();let e=encodeURIComponent(currentFormData["Full-Name"]||""),n=encodeURIComponent(currentFormData.Email||""),r=encodeURIComponent(currentFormData.phone||""),a=!1;$("input[type='radio']:checked").each((function(){"intro-call"===$(this).data("redirection")&&(a=!0)}));let i=a?"/intro-call":"/call";window.location.href=`${i}?firstname=${e}&phone=${r}&email=${n}`})),document.querySelectorAll(".multistep-choice-checkbox input").forEach((t=>{t.addEventListener("change",(()=>{const e=t.closest(".multistep-choice-checkbox");t.checked?e.style.backgroundColor="#ffffff4d":e.style.backgroundColor=""}))})),document.querySelectorAll(".multistep-choice-last input").forEach((t=>{t.addEventListener("change",(()=>{!function(t,e){document.querySelectorAll(e).forEach((t=>{t.style.backgroundColor=""}));const o=t.closest(e);t.checked&&(o.style.backgroundColor="#ffffff4d")}(t,".multistep-choice-last"),r()}))})),$(document).on("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),$(".multistep-form-next-modal ").click()),"Escape"===t.key&&(document.querySelector(".modal-wrapper").style.display="none",document.body.style.overflow="")})),document.addEventListener("click",(function(t){t.target.closest(".application-open")&&(document.querySelectorAll(".appplication-form-modal").forEach((t=>t.style.display="flex")),document.body.style.overflow="hidden"),t.target.closest(".application-close")&&(document.querySelectorAll(".appplication-form-modal").forEach((t=>t.style.display="none")),document.body.style.overflow="")})),window.addEventListener("beforeunload",(async function(t){o();try{await fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:"partial",formData:currentFormData,step:currentStep,timestamp:(new Date).toISOString()}),keepalive:!0})}catch(t){console.error("Failed to send data before unload:",t)}})),console.error=function(){}}));